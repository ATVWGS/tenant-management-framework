trigger: none

variables:
  moduleName: 'TMF'

name: Test TMF $(SourceBranchName) $(Date:yyyy-MM-dd).$(Rev:r)

pool:
  vmImage: "windows-latest"

stages:
- stage: prepare_environment
  jobs:
  - job: install_dependencies
    steps:
    - task: Cache@2
      displayName: Restore required Powershell modules
      inputs:
        key: tmf | powershell | required modules 
        path: C:\Users\VssAdministrator\Documents\WindowsPowerShell\Modules
        cacheHitVar: MODULES_RESTORED
    - task: PowerShell@2
      displayName: Run install-dependencies.ps1
      inputs:      
        filePath: 'build/install-dependencies.ps1'
        arguments: '-SystemAccessToken $(System.AccessToken) -FeedName $(feedName) -FeedUrl $(feedUrl) -UsePrivatePackageFeed'
      condition: ne(variables.MODULES_RESTORED, 'true')
- stage: run_tests
  jobs:
  - job: general_tests
    steps:
      - task: Cache@2
        displayName: Restore required Powershell modules
        inputs:
          key: tmf | powershell | required modules
          path: C:\Users\VssAdministrator\Documents\WindowsPowerShell\Modules
          cacheHitVar: MODULES_RESTORED
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            New-Item -Path "$(Pipeline.Workspace)\tests\results" -ItemType Directory -Force
      - task: PowerShell@2
        displayName: Invoke Pester tests
        continueOnError: true
        inputs:         
          filePath: 'tests/test.ps1'
          arguments: '-SkipDependencyDownload -OutPath "$(Pipeline.Workspace)/tests/results" -TestsToRun "General"'
          workingDirectory: 'tests/'
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'NUnit'
          testResultsFiles: '**/*.xml'
          searchFolder: '$(Pipeline.Workspace)/tests/results'
          failTaskOnFailedTests: true
  - job: module_specific_tests
    steps:
      - task: Cache@2
        displayName: Restore required Powershell modules
        inputs:
          key: tmf | powershell | required modules
          path: C:\Users\VssAdministrator\Documents\WindowsPowerShell\Modules
          cacheHitVar: MODULES_RESTORED
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            New-Item -Path "$(Pipeline.Workspace)\tests\results" -ItemType Directory -Force
      - task: PowerShell@2
        displayName: Invoke Pester tests
        continueOnError: true
        inputs:         
          filePath: 'tests/test.ps1'
          arguments: '-SkipDependencyDownload -OutPath "$(Pipeline.Workspace)/tests/results" -TenantId $(testsTenantId) -TenantClientSecret $(testsClientSecret) -TenantClientId $(testsClientId) -TestsToRun "Module"'
          workingDirectory: 'tests/'
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'NUnit'
          testResultsFiles: '**/*.xml'
          searchFolder: '$(Pipeline.Workspace)/tests/results'
          failTaskOnFailedTests: true