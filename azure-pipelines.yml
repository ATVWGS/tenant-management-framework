trigger:
  branches:
    include:
      - main
      - prepare-release/*
  paths:
    include:
      - TMF

name: '[Build and Deploy] Tenant Management Framework'

variables:
  major: 1
  minor: 3
  patch: $(Build.BuildID)
  moduleName: 'TMF'
  releaseFeed: 'vwgs-azdevops-release'
  buildVer: $(major).$(minor).$(Build.BuildID)
  ${{ if ne(variables['Build.SourceBranchName'], 'main') }}:
    prerelease: prerelease

pool:
  vmImage: "ubuntu-latest"

stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    - task: PowerShell@2
      inputs:
        filePath: 'build/build.ps1'
        arguments: '-ModuleName $(moduleName) -BuildVersion $(buildVer) -LicenseUri $(licenseUri) -ProjectUri $(projectUri) -Tags $(tags) -Prerelease $(prerelease)'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: 'LICENSE'
        TargetFolder: '$(System.DefaultWorkingDirectory)/TMF'
    - task: NuGetCommand@2
      inputs:
        command: 'pack'
        packagesToPack: '$(System.DefaultWorkingDirectory)/$(moduleName)/$(moduleName).nuspec'
        versioningScheme: byEnvVar
        versionEnvVar: buildVer
        buildProperties: 'VERSIONHERE=$(buildVer)'
    - task: CopyFiles@2
      displayName: Copy publish.ps1 to staging directory
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/build'
        Contents: 'publish.ps1'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'package'
        publishLocation: 'Container'
- stage: Deploy
  jobs:
  - job: Deploy
    steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'package'
          itemPattern: '**'
          targetPath: '$(Pipeline.Workspace)'
      - task: NuGetCommand@2
        inputs:
          command: 'push'
          packagesToPush: '$(Pipeline.Workspace)/**/*.nupkg'
          nuGetFeedType: 'internal'
          publishVstsFeed: 'Azure Team VWGS/vwgs-azdevops-release'
          allowPackageConflicts: true